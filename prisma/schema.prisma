// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  PREMIUM_USER
}

model User{
  id String @id @default(cuid()) @map("_id")
  name String?
  email String @unique
  image String?
  accounts Account[]
  role UserRole @default(USER)
  myPlayground Playground[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Account {
  id String @id @default(cuid()) @map("_id")
  userId String
  type String
  provider String
  providerAccountId String
  refreshToken String? 
  accessToken String? 
  expiresAt Int? 
  tokenType String? 
  scope String?
  idToken String? 
  sessionState String? 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

enum Templates {
  REACT
  NEXTJS
  EXPRESS 
  VUE
  HONO
  ANGULAR
}

model Playground {
  id String @id @default(cuid()) @map("_id")
  title String
  description String?
  template Templates @default(REACT)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  // starMark StarMark[]
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade )

  // Todo TemplateFiles
}

// model starMark {
//   id String @id @map("_id") @default(cuid())
//   userId String
//   playgroundId String
//   isMarked Boolean
//   createdAt DateTime @default(now())
//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
//   playground Playground @relation(fields: [playgroundId], references: [id], onDelete: Cascade)
// }